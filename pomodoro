#!/bin/sh
#
# Get timer status

update() {
  sed -i "s/^current .*\$/current $1/" $infofile
  sed -i "s/^start .*\$/start $2/" $infofile
}

list() {
  cat $infofile | awk '/#profiles/{flag=1;next}flag{print $1}'
}

s=0
k=0
g=0
profile="work"
infofile="$HOME/.pomodoro.info"

# If no parameters, show dmenu.
if [ $# -le 0 ]; then 
  selection=$(printf "start\nkill" | dmenu)
  if [ $? -ne 0 ]; then
    exit
  fi
  if [ "$selection" = "start" ]; then
    s=1
  fi
  if [ "$selection"  = "kill" ]; then
    k=1
  fi
fi

# Check input arguments.
while getopts ":sgk" opt; do
  case $opt in
    s)
      s=1
      ;;
    k)
      k=1
      ;;
    g)
      g=1
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "-$OPTARG requires argument" >&2
      exit 1
      ;;
  esac
done

if [ $s = 1 ]; then
  profile=$(list | dmenu)

  if [ $? -ne 0 ]; then
    exit
  fi

  update $profile $(date +%s)
fi

if [ $k = 1 ]; then
  update null $(date +%s)
fi

if [ $g = 1 ]; then
  current=$(cat $infofile | awk '/current/ {print $2}')

  if [ $current = "null" ]; then
    exit 1
  fi

  stime=$(cat $infofile | awk '/start/ {print $2}')
  time=$(cat $infofile | awk '/'$current' / {print $2}')
  next=$(cat $infofile | awk '/'$current' / {print $3}')

  remaining=$(( $time - $(date +%s) + $stime ))

  if [ $remaining -le 0 ]; then
    notify-send "Timer $current" "done"
    update $next $(date +%s)
    pomodoro -g
  else
    min=$(( $remaining / 60 ))
    sec=$(( $remaining % 60 ))
    sec=$(printf "%02d" $sec)
    echo "$current $min:$sec"
  fi
fi
